// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SevaKendra {
  id              String   @id @default(uuid())
  name            String
  districtId      String
  address         String
  mobileNumber    String
  landLineNumber  String
  startDate       String
  contactPersonId String @unique
  createdAt String?
  createdBy String?
  updatedAt String?
  updatedBy String?
  isActive Boolean? @default(true)

  district      District @relation(fields: [districtId],references: [id])
  auditLogs     SevaKendraAuditLog[]
  services      ServicesOnSevaKendras[]
  contactPerson ContactPerson @relation(fields: [contactPersonId], references: [id])
}

model SevaKendraAuditLog {
  id String @id @default(uuid())
  sevaKendraId String  
  status String
  date String
  description String

 sevakendra SevaKendra @relation(fields: [sevaKendraId],references: [id]) 
}

model ContactPerson {
  id           String @id @default(uuid()) 
  name         String
  email        String
  phoneNumber1 String
  phoneNumber2 String
  
  sevaKendra SevaKendra?
}

model ServicesOnSevaKendras {
  id           String @id @default(uuid())
  sevaKendraId String
  serviceId    String

  sevakendra SevaKendra @relation(fields: [sevaKendraId], references: [id])
}
model District{
    id String @id @default(uuid())
    name String @unique
    stateId String
 
    sevaKendra SevaKendra []
    state State @relation(fields: [stateId],references: [id])
}
model State{
    id String @id @default(uuid())
    name String @unique

    districts District[]
}

